
    <!--  // scripte im head definieren und im body aufrufen.
    wenn in einer anderen Datei dann : <script src (quelle) ="dateiname.js">script
        Link einfügen:
        <a href="hier den Link"> name des Wortes was aufleuten soll </a>
        bild einfügen:
        <img src="bildnamen" alt="schalte deine Bilder an!" widht="xxx" height="xxx">
        
        <form>
        vorname:<input type="text" name="vorname"><br/>
        Nachname:<input type="text" name="Nachname"><br/>
        </form>
        erstellt ein Feld für inputs
    css :
    neue Datei mit .css am ende. href"dateiname.css" in diesem fall style3.css
     IDs werden mit # angesprochen klassen mit .
     IDs binden stärker als Klassen, Klassen binden stärker als keine freie variablen
    links einbetten : a:link { color: red} mach unbenutzte Links rot
    a:visitied  { color: green} links werden grün wenn sie besucht wurden
    a:hover { font-size: 00px} erhöht beim hovern den Link
    reihenfolge beachten : link/vistited -> hover->aktiv


    DOM :
    document.befehle :
    document.getElementById(Die ID der Headline, des paragraphen ect. ähnlich wie ,,vererben")
    vorteil : dynamisch während der Laufzeit dinge verändern.
    var x = document.getElementsByTagName("h"/"p");  x beinhaltet dann alle tags von p oder h. (Array)
    x[0].innerHTML gibt den ersten p aus, x[1].innerHTML den zweiten ect.
    document.body für den gesamten Body.
    document.anchors für alle a,p,h ect.
    document.documentElement
    document.head
    document.title
    ect.


    meinEvent(element) { element.innerHTML ="xxx"} //  funktion mit (this) aufrufen um sie immer wieder zu verwerden, z.b. Bei onClick.
    var b = document.body
    x = b.childNodes // wie bei einer Baumstrucktur. x ist ein Array!

    window Befehle (BOM) : window.prompt für input abfragen.
    Cookies: 
     if navigator.cookieEnabled

     document.cookie = "isread=true; expires=Fri, 4 nov 2016 12:00:00UTC"; path=/ // Datum wann das Datum gelöscht wird.

     var,let und const: 
     var = Blockscope, let = funktionscope, const = Konstant für das Dokument, der Wert wird kann nicht geändert werden.
     